[tox]
envlist = py38,py39,py310,py311,py312,flake8,mypy,black,isort,coverage
skip_missing_interpreters = True
isolated_build = True

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
deps =
    pytest>=6.2.0
    pytest-asyncio>=0.18.0
    pytest-cov>=2.12.0
    pytest-mock>=3.6.0
    -r{toxinidir}/requirements.txt
commands =
    pytest {posargs:tests} --cov=fog_node --cov=communication --cov-report=term-missing --cov-report=xml

[testenv:flake8]
deps = flake8>=3.9.0
commands = flake8 fog_node communication tests

[testenv:mypy]
deps = 
    mypy>=0.910
    types-PyYAML
    types-requests
    -r{toxinidir}/requirements.txt
commands = mypy fog_node communication

[testenv:black]
deps = black>=21.0.0
commands = black --check --diff fog_node communication tests

[testenv:isort]
deps = isort>=5.9.0
commands = isort --check-only --diff fog_node communication tests

[testenv:black-format]
deps = black>=21.0.0
commands = black fog_node communication tests

[testenv:isort-format]
deps = isort>=5.9.0
commands = isort fog_node communication tests

[testenv:coverage]
deps =
    pytest>=6.2.0
    pytest-asyncio>=0.18.0
    pytest-cov>=2.12.0
    coverage>=5.5.0
    -r{toxinidir}/requirements.txt
commands =
    pytest --cov=fog_node --cov=communication --cov-report=html --cov-report=xml --cov-report=term
    coverage report --fail-under=80

[testenv:docs]
deps =
    sphinx>=4.0.0
    sphinx-rtd-theme>=0.5.0
    sphinx-autodoc-typehints>=1.12.0
    myst-parser>=0.15.0
    -r{toxinidir}/requirements.txt
commands =
    sphinx-build -W -b html docs docs/_build/html

[testenv:docs-serve]
deps =
    sphinx>=4.0.0
    sphinx-rtd-theme>=0.5.0
    sphinx-autodoc-typehints>=1.12.0
    myst-parser>=0.15.0
    sphinx-autobuild
    -r{toxinidir}/requirements.txt
commands =
    sphinx-autobuild docs docs/_build/html --host 0.0.0.0 --port 8000

[testenv:lint]
deps =
    flake8>=3.9.0
    mypy>=0.910
    black>=21.0.0
    isort>=5.9.0
    types-PyYAML
    types-requests
    -r{toxinidir}/requirements.txt
commands =
    flake8 fog_node communication tests
    mypy fog_node communication
    black --check fog_node communication tests
    isort --check-only fog_node communication tests

[testenv:format]
deps =
    black>=21.0.0
    isort>=5.9.0
commands =
    black fog_node communication tests
    isort fog_node communication tests

[testenv:security]
deps =
    bandit>=1.7.0
    safety>=1.10.0
commands =
    bandit -r fog_node communication
    safety check --json

[testenv:integration]
deps =
    pytest>=6.2.0
    pytest-asyncio>=0.18.0
    pytest-cov>=2.12.0
    docker-compose>=1.29.0
    -r{toxinidir}/requirements.txt
commands =
    pytest tests/integration {posargs} -v

[testenv:performance]
deps =
    pytest>=6.2.0
    pytest-asyncio>=0.18.0
    pytest-benchmark>=3.4.0
    -r{toxinidir}/requirements.txt
commands =
    pytest tests/performance {posargs} -v --benchmark-only

[testenv:clean]
deps = coverage
skip_install = true
commands =
    coverage erase
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.coverage', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.tox', ignore_errors=True)"
