[metadata]
name = fl-fog
version = attr: fog_node.__version__
author = TFM Federated Learning Team
author_email = fl-fog@project.com
description = Fog computing layer for federated learning in continuum environments
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/your-org/TFM-Federated-learning-on-edge-nodes
project_urls =
    Bug Tracker = https://github.com/your-org/TFM-Federated-learning-on-edge-nodes/issues
    Documentation = https://fl-fog.readthedocs.io/
    Source Code = https://github.com/your-org/TFM-Federated-learning-on-edge-nodes/tree/main/fl-fog
license = MIT
license_files = LICENSE
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: System :: Distributed Computing

[options]
packages = find:
python_requires = >=3.8
install_requires = file: requirements.txt
include_package_data = True
zip_safe = False

[options.packages.find]
exclude =
    tests*
    docs*

[options.extras_require]
dev =
    pytest>=6.2.0
    pytest-asyncio>=0.18.0
    pytest-cov>=2.12.0
    coverage>=5.5.0
    black>=21.0.0
    flake8>=3.9.0
    mypy>=0.910
    isort>=5.9.0
    pre-commit>=2.15.0
docs =
    sphinx>=4.0.0
    sphinx-rtd-theme>=0.5.0
    sphinx-autodoc-typehints>=1.12.0
    myst-parser>=0.15.0
monitoring =
    prometheus-client>=0.12.0
    grafana-api>=1.0.3

[options.entry_points]
console_scripts =
    fl-fog = fog_node.main:main
    fog-node = fog_node.main:main
    fl-fog-monitor = fog_node.monitoring:main

[options.package_data]
* = *.md, *.txt, *.yaml, *.yml
fog_node = config/*.yaml, config/*.yml

# Tool configurations

[flake8]
max-line-length = 88
extend-ignore = E203, E266, E501, W503
max-complexity = 10
select = B,C,E,F,W,T4,B9
per-file-ignores =
    __init__.py:F401
    tests/*:S101,D103
exclude =
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[mypy-tests.*]
disallow_untyped_defs = False

[coverage:run]
source = fog_node, communication
omit =
    */tests/*
    */test_*
    setup.py
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[tool:pytest]
testpaths = tests
python_files = test_*.py *_test.py
python_functions = test_*
addopts =
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --cov=fog_node
    --cov=communication
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    smoke: marks tests as smoke tests
